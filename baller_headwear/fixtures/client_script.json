[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2025-01-22 13:46:15.718293",
  "module": "Baller Headwear",
  "name": "Custom Naming Series (Sales Order)",
  "script": "frappe.ui.form.on('Sales Order', {\n    before_save: function(frm) {\n\n        let transaction_date = frm.doc.transaction_date;\n\n        if (transaction_date) {\n\n            let date = new Date(transaction_date);\n            \n            let month = date.getMonth() + 1;  \n            let year = date.getFullYear();\n            \n            let yearFormatted = year.toString().slice(-2);\n            \n            let monthFormatted = month < 10 ? '0' + month : month.toString();\n\n            frm.set_value('custom_id_month', monthFormatted);\n            frm.set_value('custom_id_year', yearFormatted);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2025-01-22 13:46:09.795235",
  "module": "Baller Headwear",
  "name": "Custom Naming Series (Sales Invoice)",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    before_save: function(frm) {\n\n        let posting_date = frm.doc.posting_date;\n\n        if (posting_date) {\n\n            let date = new Date(posting_date);\n            \n            let month = date.getMonth() + 1;  \n            let year = date.getFullYear();\n            \n            let yearFormatted = year.toString().slice(-2);\n            \n            let monthFormatted = month < 10 ? '0' + month : month.toString();\n\n            frm.set_value('custom_id_month', monthFormatted);\n            frm.set_value('custom_id_year', yearFormatted);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 0,
  "modified": "2025-01-21 18:51:19.314806",
  "module": "Baller Headwear",
  "name": "Custom Naming Series (Purchase Order)",
  "script": "frappe.ui.form.on('Purchase Order', {\n    before_save: function(frm) {\n\n        let transaction_date = frm.doc.transaction_date;\n\n        if (transaction_date) {\n\n            let date = new Date(transaction_date);\n            \n            let month = date.getMonth() + 1;  \n            let year = date.getFullYear();\n            \n            let yearFormatted = year.toString().slice(-2);\n            \n            \n            let monthFormatted = month < 10 ? '0' + month : month.toString();\n\n            frm.set_value('custom_id_month', monthFormatted);\n            frm.set_value('custom_id_year', yearFormatted);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 0,
  "modified": "2025-01-22 13:46:00.080483",
  "module": "Baller Headwear",
  "name": "Custom Naming Series (Quotation)",
  "script": "frappe.ui.form.on('Quotation', {\n    before_save: function(frm) {\n\n        let transaction_date = frm.doc.transaction_date;\n\n        if (transaction_date) {\n\n            let date = new Date(transaction_date);\n            \n            let month = date.getMonth() + 1;  \n            let year = date.getFullYear();\n            \n            let yearFormatted = year.toString().slice(-2);\n            \n            let monthFormatted = month < 10 ? '0' + month : month.toString();\n\n            frm.set_value('custom_id_month', monthFormatted);\n            frm.set_value('custom_id_year', yearFormatted);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 0,
  "modified": "2025-01-22 13:45:55.565707",
  "module": "Baller Headwear",
  "name": "Custom Naming Series (Payment Entry)",
  "script": "frappe.ui.form.on('Payment Entry', {\n    before_save: function(frm) {\n\n        let posting_date = frm.doc.posting_date;\n\n        if (posting_date) {\n\n            let date = new Date(posting_date);\n            \n            let month = date.getMonth() + 1;  \n            let year = date.getFullYear();\n            \n            let yearFormatted = year.toString().slice(-2);\n            \n            let monthFormatted = month < 10 ? '0' + month : month.toString();\n\n            frm.set_value('custom_id_month', monthFormatted);\n            frm.set_value('custom_id_year', yearFormatted);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 0,
  "modified": "2025-01-22 13:45:51.214148",
  "module": "Baller Headwear",
  "name": "Custom Naming Series (Journal Entry)",
  "script": "frappe.ui.form.on('Journal Entry', {\n    before_save: function(frm) {\n\n        let posting_date = frm.doc.posting_date;\n\n        if (posting_date) {\n\n            let date = new Date(posting_date);\n            \n            let month = date.getMonth() + 1;  \n            let year = date.getFullYear();\n            \n            let yearFormatted = year.toString().slice(-2);\n            \n            let monthFormatted = month < 10 ? '0' + month : month.toString();\n\n            frm.set_value('custom_id_month', monthFormatted);\n            frm.set_value('custom_id_year', yearFormatted);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 0,
  "modified": "2025-01-22 13:46:05.020496",
  "module": "Baller Headwear",
  "name": "Custom Naming Series (Purchase Invoice)",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n    before_save: function(frm) {\n\n        let posting_date = frm.doc.posting_date;\n\n        if (posting_date) {\n\n            let date = new Date(posting_date);\n            \n            let month = date.getMonth() + 1;  \n            let year = date.getFullYear();\n            \n            let yearFormatted = year.toString().slice(-2);\n            \n            let monthFormatted = month < 10 ? '0' + month : month.toString();\n\n            frm.set_value('custom_id_month', monthFormatted);\n            frm.set_value('custom_id_year', yearFormatted);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-03-04 12:09:05.594943",
  "module": "Baller Headwear",
  "name": "Default Naming Series (SO)",
  "script": "frappe.ui.form.on('Sales Order', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'SAL-ORD-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-SO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'SAL-ORD-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-SO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-03-04 12:09:21.052512",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Sales Invoice)",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'ACC-SINV-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series', '.{custom_abbr}.-SI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'ACC-SINV-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', '.{custom_abbr}.-SI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2025-03-04 12:08:48.618481",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Purchase Order)",
  "script": "frappe.ui.form.on('Purchase Order', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'PUR-ORD-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'PUR-ORD-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-PO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-03-04 12:08:01.016641",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Purchase Invoice)",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'ACC-PINV-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'ACC-PINV-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-PI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2025-03-04 12:07:45.824773",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Quotation)",
  "script": "frappe.ui.form.on('Quotation', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'SAL-QTN-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-SQ-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'SAL-QTN-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-SQ-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2025-03-11 11:47:43.976862",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Payment Entry)",
  "script": "frappe.ui.form.on('Payment Entry', {\r\n    company: function(frm) {\r\n        frappe.call({\r\n            method: 'frappe.client.get_value',\r\n            args: {\r\n                doctype: 'Company Settings',\r\n                fieldname: 'vietnam_company_name'\r\n            },\r\n            callback: function(response) {\r\n                if (response.message) {\r\n                    var vietnam_company_name = response.message.vietnam_company_name;\r\n                    if (frm.doc.company != vietnam_company_name) {\r\n                        frm.set_value('naming_series', 'ACC-PAY-.YYYY.-');\r\n                    }\r\n                    if (frm.doc.company == vietnam_company_name) {\r\n                        frm.set_value('naming_series', '.{custom_abbr}.-PAY-.{custom_id_year}.-.{custom_id_month}.-.####');\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    },\r\n    // onload_post_render: function(frm) {\r\n    //     if (frm.doc.docstatus != 1 && frm.doc.docstatus != 0) {\r\n    //         frappe.call({\r\n    //             method: 'frappe.client.get_value',\r\n    //             args: {\r\n    //                 doctype: 'Company Settings',\r\n    //                 fieldname: 'vietnam_company_name'\r\n    //             },\r\n    //             callback: function(response) {\r\n    //                 if (response.message) {\r\n    //                     var vietnam_company_name = response.message.vietnam_company_name;\r\n    //                     if (frm.doc.company != vietnam_company_name) {\r\n    //                         frm.set_value('naming_series', 'ACC-PAY-.YYYY.-');\r\n    //                     }\r\n    //                     if (frm.doc.company == vietnam_company_name) {\r\n    //                         frm.set_value('naming_series', '.{custom_abbr}.-PAY-.{custom_id_year}.-.{custom_id_month}.-.####');\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // },\r\n\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 1,
  "modified": "2025-03-18 19:22:04.488112",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Journal Entry)",
  "script": "frappe.ui.form.on('Journal Entry', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'ACC-JV-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-JV-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'ACC-JV-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-JV-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2025-03-04 12:06:56.118940",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Work Order)",
  "script": "frappe.ui.form.on('Work Order', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MFG-WO-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-WO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'MFG-WO-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-WO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2025-03-04 12:06:33.631709",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Purchase Receipt)",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MAT-PRE-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'MAT-PRE-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-PR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2025-03-04 12:06:08.992750",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Material Request)",
  "script": "frappe.ui.form.on('Material Request', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MAT-MR-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-MR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'MAT-MR-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-MR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n\n// \t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Production Plan",
  "enabled": 1,
  "modified": "2025-03-04 12:05:43.777405",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Production Plan)",
  "script": "frappe.ui.form.on('Production Plan', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MFG-PP-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PP-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2024-12-24 12:19:13.525269",
  "module": "Baller Headwear",
  "name": "Work Order Customization (Create Material Request)",
  "script": "frappe.ui.form.on('Work Order', {\r\n    refresh: function (frm) {\r\n        if (frm.doc.docstatus === 1) {\r\n            frm.add_custom_button(__('Create Material Request'), function () {\r\n                frappe.db.get_doc('Work Order Customization Settings')\r\n                    .then(settings => {\r\n                        frappe.new_doc('Material Request', {\r\n                            work_order: frm.doc.name,\r\n                            company: frm.doc.company,\r\n                            material_request_type: 'Material Transfer',\r\n                            set_from_warehouse: settings.source_warehouse,\r\n                            set_warehouse: settings.target_warehouse\r\n                        });\r\n                    })\r\n                    .catch(err => {\r\n                        frappe.msgprint(__('Failed to fetch Work Order Customization Settings'));\r\n                        console.error(err);\r\n                    });\r\n            }, __('Actions'));\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2024-12-24 12:19:23.062789",
  "module": "Baller Headwear",
  "name": "Material Request Customization",
  "script": "frappe.ui.form.on('Material Request', {\r\n    refresh: function(frm) {\r\n        if (frm.doc.docstatus === 1) {\r\n            frm.add_custom_button(__('Material Transfer for Manufacture'), function() {\r\n                frappe.model.open_mapped_doc({\r\n                    method: \"baller_headwear.baller_headwear.api.make_stock_entry\",\r\n                    frm: frm,\r\n                    args: {\r\n                        stock_entry_type: \"Material Transfer for Manufacture\"\r\n                    }\r\n                });\r\n            }, __(\"Create\"));\r\n        }\r\n    }\r\n});\r\n\r\n// frappe.ui.form.on('Material Request', {\r\n//     refresh: function(frm) {\r\n//         frm.add_custom_button(__('Material Transfer for Manufacture'), function() {\r\n//             frappe.model.open_mapped_doc({\r\n//                 method: \"baller_headwear.baller_headwear.api.make_stock_entry\",\r\n//                 frm: frm,\r\n//                 args: {\r\n//                     stock_entry_type: \"Material Transfer for Manufacture\"\r\n//                 }\r\n//             });\r\n//         }, __(\"Create\"));\r\n//     }\r\n// });\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-12-28 12:55:32.667886",
  "module": "Vietnam Accounting Customization",
  "name": "Exchange Rate Customization",
  "script": "frappe.ui.form.on('Sales Invoice', {     \r\n    custom_transaction_date_exchange_rate: function(frm) {         \r\n        console_log_sales_order_totals(frm);     \r\n    } \r\n});\r\n\r\nasync function console_log_sales_order_totals(frm) {     \r\n    if (!frm.doc.items || frm.doc.items.every(item => !item.item_code)) {\r\n        frappe.throw(__('Please add at least one item to the Sales Invoice before proceeding.'));\r\n    }\r\n\r\n    let sales_order_totals = {};     \r\n    let sales_order_ids = [];      \r\n\r\n    frm.doc.items.forEach(function(item) {         \r\n        if (item.sales_order) {             \r\n            if (sales_order_totals[item.sales_order]) {                 \r\n                sales_order_totals[item.sales_order] += item.amount;             \r\n            } else {                 \r\n                sales_order_totals[item.sales_order] = item.amount;                 \r\n                sales_order_ids.push(item.sales_order);             \r\n            }         \r\n        }     \r\n    });      \r\n\r\n    let sales_order_list = [];     \r\n    for (let sales_order_id in sales_order_totals) {         \r\n        sales_order_list.push({             \r\n            sales_order_id: sales_order_id,             \r\n            outstanding_amount: sales_order_totals[sales_order_id],             \r\n            exchange_rate: 1,              \r\n            allocated_amount: 0,             \r\n            payment_entry_id: null         \r\n        });     \r\n    }      \r\n\r\n    console.log('Sales Orders and Outstanding Amounts:', sales_order_list);     \r\n    console.log('Unique Sales Order IDs:', sales_order_ids);      \r\n\r\n    let updated_sales_order_list = await reduce_advance_amounts(frm, sales_order_list);     \r\n    console.log('Updated Sales Orders after reducing advance amounts:', updated_sales_order_list);      \r\n\r\n    let final_calculation = calculate_final_value(frm, updated_sales_order_list);     \r\n    console.log('Final Calculation:', final_calculation);      \r\n\r\n    frm.set_value('conversion_rate', final_calculation);     \r\n    frm.save();     \r\n    frappe.msgprint(__('Conversion Rate updated to: ' + final_calculation)); \r\n}  \r\n\r\nfunction reduce_advance_amounts(frm, sales_order_list) {     \r\n    let promises = [];     \r\n    let sales_order_ids_with_payment = [];     \r\n\r\n    frm.doc.advances.forEach(function(advance) {         \r\n        if (advance.reference_name) {             \r\n            let promise = new Promise((resolve, reject) => {                 \r\n                frappe.call({                     \r\n                    method: 'frappe.client.get',                     \r\n                    args: {                         \r\n                        doctype: 'Payment Entry',                         \r\n                        name: advance.reference_name                     \r\n                    },                     \r\n                    callback: function(response) {                         \r\n                        if (response.message) {                             \r\n                            let payment_entry_doc = response.message;                             \r\n                            let source_exchange_rate = payment_entry_doc.source_exchange_rate || 1;                             \r\n                            let payment_entry_id = payment_entry_doc.name;                             \r\n\r\n                            payment_entry_doc.references.forEach(function(reference) {                                 \r\n                                let reference_sales_order_id = reference.reference_name;                                 \r\n\r\n                                sales_order_ids_with_payment.push(reference_sales_order_id);\r\n\r\n                                sales_order_list.forEach(function(order) {                                     \r\n                                    if (order.sales_order_id === reference_sales_order_id) {                                         \r\n                                        let reduced_amount = order.outstanding_amount - advance.advance_amount;                                         \r\n                                        order.outstanding_amount = reduced_amount < 0 ? 0 : reduced_amount;                                         \r\n                                        order.exchange_rate = source_exchange_rate;                                         \r\n                                        order.allocated_amount += advance.advance_amount;                                         \r\n                                        order.payment_entry_id = payment_entry_id;                                     \r\n                                    }                                 \r\n                                });                             \r\n                            });                             \r\n                            resolve();                           \r\n                        } else {                             \r\n                            console.error('Failed to fetch Payment Entry:', advance.reference_name);                             \r\n                            reject();                         \r\n                        }                     \r\n                    }                 \r\n                });             \r\n            });             \r\n            promises.push(promise);         \r\n        }     \r\n    });      \r\n\r\n    return Promise.all(promises).then(() => {         \r\n        sales_order_list.forEach(function(order) {             \r\n            if (!sales_order_ids_with_payment.includes(order.sales_order_id)) {                 \r\n                frappe.throw(__('No Payment Entry found for Sales Order: ' + order.sales_order_id));             \r\n            }         \r\n        });         \r\n\r\n        return sales_order_list;     \r\n    }); \r\n}  \r\n\r\nfunction calculate_final_value(frm, sales_order_list) {     \r\n    let custom_transaction_exchange_rate = frm.doc.custom_transaction_date_exchange_rate || 1;     \r\n    console.log('Custom Exchange Rate:', custom_transaction_exchange_rate);      \r\n\r\n    let total_amount = frm.doc.total || 1;      \r\n\r\n    console.log('Total Amount:', total_amount);      \r\n\r\n    let total_outstanding_amount = 0;     \r\n    let total_allocated_amount = 0;      \r\n\r\n    sales_order_list.forEach(function(order) {         \r\n        total_outstanding_amount += order.outstanding_amount;         \r\n        total_allocated_amount += (order.allocated_amount * order.exchange_rate);     \r\n    });      \r\n\r\n    console.log('Total Outstanding Amount:', total_outstanding_amount);     \r\n    console.log('Total Allocated Amount:', total_allocated_amount);      \r\n\r\n    let outstanding_amount_value = total_outstanding_amount * custom_transaction_exchange_rate;     \r\n    let allocated_amount_value = total_allocated_amount;      \r\n\r\n    console.log('Outstanding Amount Value:', outstanding_amount_value);     \r\n    console.log('Allocated Amount Value:', allocated_amount_value);      \r\n\r\n    let final_value = (outstanding_amount_value + allocated_amount_value) / total_amount;      \r\n\r\n    console.log('Final Value:', final_value);     \r\n    return final_value; \r\n} \r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Production Plan",
  "enabled": 0,
  "modified": "2025-02-08 09:18:57.707059",
  "module": null,
  "name": "baller_headwear (app)",
  "script": "frappe.ui.form.on('Production Plan', {\n  before_save: function(frm) {\n        if (frm.doc.planned_start_date) {\n            frm.set_value('planned_start_date', moment(frm.doc.planned_start_date).format('YYYY-MM-DD HH:mm:ss'));\n        }\n    }\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-03-04 12:05:21.721048",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Stock Entry)",
  "script": "frappe.ui.form.on('Stock Entry', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MAT-STE-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-SE-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 0,
  "modified": "2025-02-24 12:23:41.442644",
  "module": null,
  "name": "WO SCRIPT",
  "script": "\n})frappe.ui.form.on(\"Work Order\", {\n    before_save: function(frm) {\n        let extra_qty = 0; // Số lượng NVL cộng thêm\n\n        if (frm.doc.qty < 1000) {\n            extra_qty = 5; // Nếu sản xuất < 1000 mũ, cộng NVL của 5 mũ\n        } else {\n            extra_qty = 10; // Nếu sản xuất ≥ 1000 mũ, cộng NVL của 10 mũ\n        }\n\n        frm.doc.required_items.forEach(item => {\n            let extra_material = (item.required_qty / frm.doc.qty) * extra_qty;\n            item.required_qty += extra_material;\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Packing Slip",
  "enabled": 1,
  "modified": "2025-03-11 17:22:14.542255",
  "module": "Baller Headwear",
  "name": "Packing list Customization",
  "script": "frappe.ui.form.on('Packing Slip', {\n    before_save: function(frm) {\n        total_gw_calc(frm);\n    },\n    delivery_note: function(frm) {\n        if (frm.doc.delivery_note) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Delivery Note',\n                    name: frm.doc.delivery_note\n                },\n                callback: function(response) {\n                    if (response.message) {\n                        var delivery_note_doc = response.message;\n                        \n                        if (delivery_note_doc.items && delivery_note_doc.items.length > 0) {\n                            var first_item = delivery_note_doc.items[0];\n\n                            if (first_item.against_sales_invoice) {\n                                frm.set_value('custom_sales_invoice_id', first_item.against_sales_invoice);\n                            } else {\n                                frappe.msgprint(__('No Sales Invoice found for this Delivery Note'));\n                            }\n                        } else {\n                            frappe.msgprint(__('No items found in this Delivery Note'));\n                        }\n                    }\n                }\n            });\n        } else {\n            frm.set_value('custom_sales_invoice_id', '');\n        }\n    }\n})\n\nfrappe.ui.form.on('Packing Slip Item', {\n    custom_quantity_of_cartons: function(frm, cdt, cdn) {\n        calculateTotal(frm, cdt, cdn);\n        calculatetotal_gw(frm, cdt, cdn);\n    },\n    custom_nwkgctn: function(frm, cdt, cdn) {\n        calculateTotal(frm, cdt, cdn);\n    },\n    custom_total_net_weight: function(frm, cdt, cdn) {\n        calculate_per_item_net_weight(frm, cdt, cdn);\n    },\n    custom_gwkgctn: function(frm, cdt, cdn) {\n        calculatetotal_gw(frm, cdt, cdn);\n    },\n\n});\n\nfunction calculateTotal(frm, cdt, cdn) {\n    var child_doc = locals[cdt][cdn];\n    var total_net_weight = 0;\n    if (child_doc.custom_quantity_of_cartons) {\n        total_net_weight = child_doc.custom_quantity_of_cartons * child_doc.custom_nwkgctn ;\n    }\n    if (child_doc.custom_nwkgctn) {\n        total_net_weight = child_doc.custom_nwkgctn * child_doc.custom_quantity_of_cartons ;\n    }\n    frappe.model.set_value(cdt, cdn, 'custom_total_net_weight', total_net_weight);\n}\n\nfunction calculatetotal_gw(frm, cdt, cdn) {\n    var child_doc = locals[cdt][cdn];\n    var total_net_weight = 0;\n    if (child_doc.custom_quantity_of_cartons) {\n        total_net_weight = child_doc.custom_quantity_of_cartons * child_doc.custom_gwkgctn ;\n    }\n    if (child_doc.custom_gwkgctn) {\n        total_net_weight = child_doc.custom_gwkgctn * child_doc.custom_quantity_of_cartons ;\n    }\n    frappe.model.set_value(cdt, cdn, 'custom_total_gross_weight', total_net_weight);\n}\n\nfunction calculate_per_item_net_weight(frm, cdt, cdn, total_net_weight) {\n    var child_doc = locals[cdt][cdn];\n    var per_item_net_weight = 0;\n    \n    if (child_doc.custom_total_net_weight > 0 && child_doc.qty > 0) {\n        per_item_net_weight = child_doc.custom_total_net_weight / child_doc.qty;\n    } else {\n        per_item_net_weight = 0;\n    }\n\n    frappe.model.set_value(cdt, cdn, 'net_weight', per_item_net_weight);\n}\n\nfunction total_gw_calc(frm) {\n    var total_gross_weight = 0;\n    \n    frm.doc.items.forEach(row => {\n        total_gross_weight += row.custom_total_gross_weight;\n    }); \n \n\n    frm.set_value('gross_weight_pkg', total_gross_weight);\n}\n\n\n",
  "view": "Form"
 }
]