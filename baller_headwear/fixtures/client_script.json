[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM Creator",
  "enabled": 1,
  "modified": "2025-06-12 17:08:05.967797",
  "module": null,
  "name": "Fetch Image for child table",
  "script": "frappe.ui.form.on('BOM Creator', {\r\n    before_save: function(frm) {\r\n        if (frm._image_paths_set) return;\r\n\r\n        let promises = [];\r\n\r\n        (frm.doc.items || []).forEach(row => {\r\n            if (!row.custom_attach) {\r\n                let p = frappe.call({\r\n                    method: \"baller_headwear.baller_headwear.api.get_item_image\", \r\n                    args: { item_code: row.item_code },\r\n                    callback: function(r) {\r\n                        if (r.message) {\r\n                            frappe.model.set_value(row.doctype, row.name, 'custom_attach', r.message);\r\n                            console.log(`Set image path for ${row.item_code}: ${r.message}`);\r\n                        } else {\r\n                            console.log(`No image found for ${row.item_code}`);\r\n                        }\r\n                    }\r\n                });\r\n                promises.push(p);\r\n            }\r\n        });\r\n\r\n        if (promises.length) {\r\n            frappe.validated = false;  \r\n            Promise.all(promises.map(p => p.then?.() || Promise.resolve())).then(() => {\r\n                frm._image_paths_set = true;\r\n                frappe.show_alert({\r\n                    message: __('Image paths updated. Please click Save again.'),\r\n                    indicator: 'green'\r\n                });\r\n            });\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Asset",
  "enabled": 1,
  "modified": "2025-04-08 13:25:04.998408",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Asset)",
  "script": "frappe.ui.form.on('Asset', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'ACC-ASS-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-ASS-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'PUR-ORD-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-PO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Pick List",
  "enabled": 1,
  "modified": "2025-04-12 12:35:01.084007",
  "module": null,
  "name": "Test pick list",
  "script": "frappe.ui.form.on('Pick List', {\n  refresh(frm) {\n    if (frm.doc.purpose === \"Material Transfer for Manufacture\" && frm.doc.docstatus === 0) {\n      frm.add_custom_button(\"Get Items from Work Orders\", () => {\n        // Mở dialog chọn Work Order\n        const d = new frappe.ui.form.MultiSelectDialog({\n          doctype: \"Work Order\",\n          target: frm,\n          setters: {\n            production_item: undefined,\n            company: frm.doc.company,\n            status: \"Submitted\",\n          },\n          add_filters_group: 1,\n          get_query() {\n            return {\n              filters: {\n                docstatus: 1,\n                status: [\"!=\", \"Completed\"],\n              },\n            };\n          },\n          action(selections) {\n            if (selections && selections.length > 0) {\n              frappe.call({\n                method: \"erpnext.stock.doctype.pick_list.pick_list.get_items_from_work_orders\",\n                args: {\n                  work_orders: selections,\n                  company: frm.doc.company,\n                },\n                callback: function(r) {\n                  if (!r.exc && r.message) {\n                    frm.clear_table(\"locations\");\n                    $.each(r.message, function(i, d) {\n                      const row = frm.add_child(\"locations\");\n                      Object.assign(row, d);\n                    });\n                    frm.refresh_field(\"locations\");\n                    d.dialog.hide();\n                  }\n                },\n              });\n            }\n          },\n        });\n      });\n    }\n  }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-03-04 12:09:05.594943",
  "module": "Baller Headwear",
  "name": "Default Naming Series (SO)",
  "script": "frappe.ui.form.on('Sales Order', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'SAL-ORD-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-SO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'SAL-ORD-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-SO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-03-04 12:09:21.052512",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Sales Invoice)",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'ACC-SINV-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series', '.{custom_abbr}.-SI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'ACC-SINV-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', '.{custom_abbr}.-SI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2025-03-04 12:08:48.618481",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Purchase Order)",
  "script": "frappe.ui.form.on('Purchase Order', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'PUR-ORD-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'PUR-ORD-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-PO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-03-04 12:08:01.016641",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Purchase Invoice)",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'ACC-PINV-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'ACC-PINV-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-PI-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2025-03-04 12:07:45.824773",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Quotation)",
  "script": "frappe.ui.form.on('Quotation', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'SAL-QTN-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-SQ-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'SAL-QTN-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-SQ-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n\n// \t}\n})\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2025-03-11 11:47:43.976862",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Payment Entry)",
  "script": "frappe.ui.form.on('Payment Entry', {\r\n    company: function(frm) {\r\n        frappe.call({\r\n            method: 'frappe.client.get_value',\r\n            args: {\r\n                doctype: 'Company Settings',\r\n                fieldname: 'vietnam_company_name'\r\n            },\r\n            callback: function(response) {\r\n                if (response.message) {\r\n                    var vietnam_company_name = response.message.vietnam_company_name;\r\n                    if (frm.doc.company != vietnam_company_name) {\r\n                        frm.set_value('naming_series', 'ACC-PAY-.YYYY.-');\r\n                    }\r\n                    if (frm.doc.company == vietnam_company_name) {\r\n                        frm.set_value('naming_series', '.{custom_abbr}.-PAY-.{custom_id_year}.-.{custom_id_month}.-.####');\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    },\r\n    // onload_post_render: function(frm) {\r\n    //     if (frm.doc.docstatus != 1 && frm.doc.docstatus != 0) {\r\n    //         frappe.call({\r\n    //             method: 'frappe.client.get_value',\r\n    //             args: {\r\n    //                 doctype: 'Company Settings',\r\n    //                 fieldname: 'vietnam_company_name'\r\n    //             },\r\n    //             callback: function(response) {\r\n    //                 if (response.message) {\r\n    //                     var vietnam_company_name = response.message.vietnam_company_name;\r\n    //                     if (frm.doc.company != vietnam_company_name) {\r\n    //                         frm.set_value('naming_series', 'ACC-PAY-.YYYY.-');\r\n    //                     }\r\n    //                     if (frm.doc.company == vietnam_company_name) {\r\n    //                         frm.set_value('naming_series', '.{custom_abbr}.-PAY-.{custom_id_year}.-.{custom_id_month}.-.####');\r\n    //                     }\r\n    //                 }\r\n    //             }\r\n    //         });\r\n    //     }\r\n    // },\r\n\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 1,
  "modified": "2025-03-18 19:22:04.488112",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Journal Entry)",
  "script": "frappe.ui.form.on('Journal Entry', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'ACC-JV-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-JV-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'ACC-JV-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-JV-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2025-03-04 12:06:56.118940",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Work Order)",
  "script": "frappe.ui.form.on('Work Order', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MFG-WO-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-WO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'MFG-WO-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-WO-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2025-03-04 12:06:33.631709",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Purchase Receipt)",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MAT-PRE-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'MAT-PRE-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-PR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2025-03-04 12:06:08.992750",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Material Request)",
  "script": "frappe.ui.form.on('Material Request', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MAT-MR-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-MR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n// \tbefore_save:function(frm) {\n// \t    frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'Company Settings',\n//                 fieldname: 'vietnam_company_name'\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var vietnam_company_name = response.message.vietnam_company_name;\n//             \t\tif (frm.doc.company != vietnam_company_name){\n//             \t\t    frm.set_value('naming_series', 'MAT-MR-.YYYY.-');\n            \t\t    \n//             \t\t}\n//             \t\tif (frm.doc.company == vietnam_company_name){\n//             \t\t    frm.set_value('naming_series','.{custom_abbr}.-MR-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n//             \t\t}\n//                 }\n//             }\n//         });\n\n// \t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Production Plan",
  "enabled": 1,
  "modified": "2025-03-04 12:05:43.777405",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Production Plan)",
  "script": "frappe.ui.form.on('Production Plan', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MFG-PP-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-PP-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\t},\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work Order",
  "enabled": 1,
  "modified": "2024-12-24 12:19:13.525269",
  "module": "Baller Headwear",
  "name": "Work Order Customization (Create Material Request)",
  "script": "frappe.ui.form.on('Work Order', {\r\n    refresh: function (frm) {\r\n        if (frm.doc.docstatus === 1) {\r\n            frm.add_custom_button(__('Create Material Request'), function () {\r\n                frappe.db.get_doc('Work Order Customization Settings')\r\n                    .then(settings => {\r\n                        frappe.new_doc('Material Request', {\r\n                            work_order: frm.doc.name,\r\n                            company: frm.doc.company,\r\n                            material_request_type: 'Material Transfer',\r\n                            set_from_warehouse: settings.source_warehouse,\r\n                            set_warehouse: settings.target_warehouse\r\n                        });\r\n                    })\r\n                    .catch(err => {\r\n                        frappe.msgprint(__('Failed to fetch Work Order Customization Settings'));\r\n                        console.error(err);\r\n                    });\r\n            }, __('Actions'));\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2024-12-24 12:19:23.062789",
  "module": "Baller Headwear",
  "name": "Material Request Customization",
  "script": "frappe.ui.form.on('Material Request', {\r\n    refresh: function(frm) {\r\n        if (frm.doc.docstatus === 1) {\r\n            frm.add_custom_button(__('Material Transfer for Manufacture'), function() {\r\n                frappe.model.open_mapped_doc({\r\n                    method: \"baller_headwear.baller_headwear.api.make_stock_entry\",\r\n                    frm: frm,\r\n                    args: {\r\n                        stock_entry_type: \"Material Transfer for Manufacture\"\r\n                    }\r\n                });\r\n            }, __(\"Create\"));\r\n        }\r\n    }\r\n});\r\n\r\n// frappe.ui.form.on('Material Request', {\r\n//     refresh: function(frm) {\r\n//         frm.add_custom_button(__('Material Transfer for Manufacture'), function() {\r\n//             frappe.model.open_mapped_doc({\r\n//                 method: \"baller_headwear.baller_headwear.api.make_stock_entry\",\r\n//                 frm: frm,\r\n//                 args: {\r\n//                     stock_entry_type: \"Material Transfer for Manufacture\"\r\n//                 }\r\n//             });\r\n//         }, __(\"Create\"));\r\n//     }\r\n// });\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2025-05-02 13:48:28.027214",
  "module": "Baller Headwear",
  "name": "Exchange Rate Customization",
  "script": "frappe.ui.form.on('Sales Invoice', {     \r\n    custom_transaction_date_exchange_rate: function(frm) {         \r\n        console_log_sales_order_totals(frm);     \r\n    } \r\n});\r\n\r\nasync function console_log_sales_order_totals(frm) {     \r\n    if (!frm.doc.items || frm.doc.items.every(item => !item.item_code)) {\r\n        frappe.throw(__('Please add at least one item to the Sales Invoice before proceeding.'));\r\n    }\r\n\r\n    let sales_order_totals = {};     \r\n    let sales_order_ids = [];      \r\n\r\n    frm.doc.items.forEach(function(item) {         \r\n        if (item.sales_order) {             \r\n            if (sales_order_totals[item.sales_order]) {                 \r\n                sales_order_totals[item.sales_order] += item.amount;             \r\n            } else {                 \r\n                sales_order_totals[item.sales_order] = item.amount;                 \r\n                sales_order_ids.push(item.sales_order);             \r\n            }         \r\n        }     \r\n    });      \r\n\r\n    let sales_order_list = [];     \r\n    for (let sales_order_id in sales_order_totals) {         \r\n        sales_order_list.push({             \r\n            sales_order_id: sales_order_id,             \r\n            outstanding_amount: sales_order_totals[sales_order_id],             \r\n            exchange_rate: 1,              \r\n            allocated_amount: 0,             \r\n            payment_entry_id: null         \r\n        });     \r\n    }      \r\n\r\n    console.log('Sales Orders and Outstanding Amounts:', sales_order_list);     \r\n    console.log('Unique Sales Order IDs:', sales_order_ids);      \r\n\r\n    let updated_sales_order_list = await reduce_advance_amounts(frm, sales_order_list);     \r\n    console.log('Updated Sales Orders after reducing advance amounts:', updated_sales_order_list);      \r\n\r\n    let final_calculation = calculate_final_value(frm, updated_sales_order_list);     \r\n    console.log('Final Calculation:', final_calculation);      \r\n\r\n    frm.set_value('conversion_rate', final_calculation);     \r\n    frm.save();     \r\n    frappe.msgprint(__('Conversion Rate updated to: ' + final_calculation)); \r\n}  \r\n\r\nfunction reduce_advance_amounts(frm, sales_order_list) {     \r\n    let promises = [];     \r\n    let sales_order_ids_with_payment = [];     \r\n\r\n    frm.doc.advances.forEach(function(advance) {         \r\n        if (advance.reference_name) {             \r\n            let promise = new Promise((resolve, reject) => {                 \r\n                frappe.call({                     \r\n                    method: 'frappe.client.get',                     \r\n                    args: {                         \r\n                        doctype: 'Payment Entry',                         \r\n                        name: advance.reference_name                     \r\n                    },                     \r\n                    callback: function(response) {                         \r\n                        if (response.message) {                             \r\n                            let payment_entry_doc = response.message;                             \r\n                            let source_exchange_rate = payment_entry_doc.source_exchange_rate || 1;                             \r\n                            let payment_entry_id = payment_entry_doc.name;                             \r\n\r\n                            payment_entry_doc.references.forEach(function(reference) {                                 \r\n                                let reference_sales_order_id = reference.reference_name;                                 \r\n\r\n                                sales_order_ids_with_payment.push(reference_sales_order_id);\r\n\r\n                                sales_order_list.forEach(function(order) {                                     \r\n                                    if (order.sales_order_id === reference_sales_order_id) {                                         \r\n                                        let reduced_amount = order.outstanding_amount - advance.allocated_amount;                                         \r\n                                        order.outstanding_amount = reduced_amount < 0 ? 0 : reduced_amount;                                         \r\n                                        order.exchange_rate = source_exchange_rate;                                         \r\n                                        order.allocated_amount += advance.allocated_amount;                                         \r\n                                        order.payment_entry_id = payment_entry_id;                                     \r\n                                    }                                 \r\n                                });                             \r\n                            });                             \r\n                            resolve();                           \r\n                        } else {                             \r\n                            console.error('Failed to fetch Payment Entry:', advance.reference_name);                             \r\n                            reject();                         \r\n                        }                     \r\n                    }                 \r\n                });             \r\n            });             \r\n            promises.push(promise);         \r\n        }     \r\n    });      \r\n\r\n    return Promise.all(promises).then(() => {         \r\n        // sales_order_list.forEach(function(order) {             \r\n        //     if (!sales_order_ids_with_payment.includes(order.sales_order_id)) {                 \r\n        //         frappe.throw(__('No Payment Entry found for Sales Order: ' + order.sales_order_id));             \r\n        //     }         \r\n        // });         \r\n\r\n        return sales_order_list;     \r\n    }); \r\n}  \r\n\r\nfunction calculate_final_value(frm, sales_order_list) {     \r\n    let custom_transaction_exchange_rate = frm.doc.custom_transaction_date_exchange_rate || 1;     \r\n    console.log('Custom Exchange Rate:', custom_transaction_exchange_rate);      \r\n\r\n    let total_amount = frm.doc.total || 1;      \r\n\r\n    console.log('Total Amount:', total_amount);      \r\n\r\n    let total_outstanding_amount = 0;     \r\n    let total_allocated_amount = 0;      \r\n\r\n    sales_order_list.forEach(function(order) {         \r\n        total_outstanding_amount += order.outstanding_amount;         \r\n        total_allocated_amount += (order.allocated_amount * order.exchange_rate);     \r\n    });      \r\n\r\n    console.log('Total Outstanding Amount:', total_outstanding_amount);     \r\n    console.log('Total Allocated Amount:', total_allocated_amount);      \r\n\r\n    let outstanding_amount_value = total_outstanding_amount * custom_transaction_exchange_rate;     \r\n    let allocated_amount_value = total_allocated_amount;      \r\n\r\n    console.log('Outstanding Amount Value:', outstanding_amount_value);     \r\n    console.log('Allocated Amount Value:', allocated_amount_value);      \r\n\r\n    let final_value = (outstanding_amount_value + allocated_amount_value) / total_amount;\r\n    final_value = Math.round(final_value * 100) / 100;\r\n    \r\n    console.log('Final Value:', final_value);\r\n    return final_value;\r\n} \r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-03-04 12:05:21.721048",
  "module": "Baller Headwear",
  "name": "Default Naming Series (Stock Entry)",
  "script": "frappe.ui.form.on('Stock Entry', {\n\tcompany:function(frm) {\n\t    frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Company Settings',\n                fieldname: 'vietnam_company_name'\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var vietnam_company_name = response.message.vietnam_company_name;\n            \t\tif (frm.doc.company != vietnam_company_name){\n            \t\t    frm.set_value('naming_series', 'MAT-STE-.YYYY.-');\n            \t\t    \n            \t\t}\n            \t\tif (frm.doc.company == vietnam_company_name){\n            \t\t    frm.set_value('naming_series','.{custom_abbr}.-SE-.{custom_id_year}.-.{custom_id_month}.-.####');\n            \t\t    \n            \t\t}\n                }\n            }\n        });\n\n\t},\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Packing Slip",
  "enabled": 1,
  "modified": "2025-03-11 17:22:14.542255",
  "module": "Baller Headwear",
  "name": "Packing list Customization",
  "script": "frappe.ui.form.on('Packing Slip', {\n    before_save: function(frm) {\n        total_gw_calc(frm);\n    },\n    delivery_note: function(frm) {\n        if (frm.doc.delivery_note) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Delivery Note',\n                    name: frm.doc.delivery_note\n                },\n                callback: function(response) {\n                    if (response.message) {\n                        var delivery_note_doc = response.message;\n                        \n                        if (delivery_note_doc.items && delivery_note_doc.items.length > 0) {\n                            var first_item = delivery_note_doc.items[0];\n\n                            if (first_item.against_sales_invoice) {\n                                frm.set_value('custom_sales_invoice_id', first_item.against_sales_invoice);\n                            } else {\n                                frappe.msgprint(__('No Sales Invoice found for this Delivery Note'));\n                            }\n                        } else {\n                            frappe.msgprint(__('No items found in this Delivery Note'));\n                        }\n                    }\n                }\n            });\n        } else {\n            frm.set_value('custom_sales_invoice_id', '');\n        }\n    }\n})\n\nfrappe.ui.form.on('Packing Slip Item', {\n    custom_quantity_of_cartons: function(frm, cdt, cdn) {\n        calculateTotal(frm, cdt, cdn);\n        calculatetotal_gw(frm, cdt, cdn);\n    },\n    custom_nwkgctn: function(frm, cdt, cdn) {\n        calculateTotal(frm, cdt, cdn);\n    },\n    custom_total_net_weight: function(frm, cdt, cdn) {\n        calculate_per_item_net_weight(frm, cdt, cdn);\n    },\n    custom_gwkgctn: function(frm, cdt, cdn) {\n        calculatetotal_gw(frm, cdt, cdn);\n    },\n\n});\n\nfunction calculateTotal(frm, cdt, cdn) {\n    var child_doc = locals[cdt][cdn];\n    var total_net_weight = 0;\n    if (child_doc.custom_quantity_of_cartons) {\n        total_net_weight = child_doc.custom_quantity_of_cartons * child_doc.custom_nwkgctn ;\n    }\n    if (child_doc.custom_nwkgctn) {\n        total_net_weight = child_doc.custom_nwkgctn * child_doc.custom_quantity_of_cartons ;\n    }\n    frappe.model.set_value(cdt, cdn, 'custom_total_net_weight', total_net_weight);\n}\n\nfunction calculatetotal_gw(frm, cdt, cdn) {\n    var child_doc = locals[cdt][cdn];\n    var total_net_weight = 0;\n    if (child_doc.custom_quantity_of_cartons) {\n        total_net_weight = child_doc.custom_quantity_of_cartons * child_doc.custom_gwkgctn ;\n    }\n    if (child_doc.custom_gwkgctn) {\n        total_net_weight = child_doc.custom_gwkgctn * child_doc.custom_quantity_of_cartons ;\n    }\n    frappe.model.set_value(cdt, cdn, 'custom_total_gross_weight', total_net_weight);\n}\n\nfunction calculate_per_item_net_weight(frm, cdt, cdn, total_net_weight) {\n    var child_doc = locals[cdt][cdn];\n    var per_item_net_weight = 0;\n    \n    if (child_doc.custom_total_net_weight > 0 && child_doc.qty > 0) {\n        per_item_net_weight = child_doc.custom_total_net_weight / child_doc.qty;\n    } else {\n        per_item_net_weight = 0;\n    }\n\n    frappe.model.set_value(cdt, cdn, 'net_weight', per_item_net_weight);\n}\n\nfunction total_gw_calc(frm) {\n    var total_gross_weight = 0;\n    \n    frm.doc.items.forEach(row => {\n        total_gross_weight += row.custom_total_gross_weight;\n    }); \n \n\n    frm.set_value('gross_weight_pkg', total_gross_weight);\n}\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Company",
  "enabled": 1,
  "modified": "2025-04-17 12:07:49.560225",
  "module": "Baller Headwear",
  "name": "Filter for Exchange / Gain Loss fields",
  "script": "frappe.ui.form.on('Company', {\n    refresh(frm) {\n        frm.set_query(\"custom_exchange_gain_account\", () => {\n            return {\n                filters: {\n                    company: frm.doc.name  \n                }\n            };\n        });\n    }\n});\n\nfrappe.ui.form.on('Company', {\n    refresh(frm) {\n        frm.set_query(\"custom_exchange_loss_account\", () => {\n            return {\n                filters: {\n                    company: frm.doc.name  \n                }\n            };\n        });\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2025-05-06 15:17:33.542935",
  "module": "Baller Headwear",
  "name": "Test",
  "script": "frappe.ui.form.on('Sales Invoice', {\r\n    onload: function(frm) {\r\n        let from_currency = frm.doc.currency;\r\n\r\n        if (!from_currency) {\r\n            console.warn('No from_currency (currency) specified.');\r\n            return;\r\n        }\r\n\r\n        frappe.db.get_value('Company', frm.doc.company, 'default_currency', function(r) {\r\n            let to_currency = r.default_currency;\r\n\r\n            if (!to_currency) {\r\n                console.error('Could not fetch company default currency.');\r\n                return;\r\n            }\r\n\r\n            if (from_currency === to_currency) {\r\n                console.log('No exchange rate needed. Both currencies are the same.');\r\n                return;\r\n            }\r\n\r\n            frappe.call({\r\n                method: 'erpnext.setup.utils.get_exchange_rate',\r\n                args: {\r\n                    from_currency: from_currency,\r\n                    to_currency: to_currency\r\n                },\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                        console.log(`Exchange Rate from ${from_currency} to ${to_currency}:`, response.message);\r\n                    } else {\r\n                        console.warn('No exchange rate returned.');\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "BOM Creator",
  "enabled": 1,
  "modified": "2025-05-24 18:39:19.296286",
  "module": null,
  "name": "Calc Planned Fabric Needed",
  "script": "frappe.ui.form.on('BOM Creator Item', {\n    qty: function(frm, cdt, cdn) {\n        update_planned_fabric_needed(frm, cdt, cdn);\n    }\n});\nfrappe.ui.form.on('BOM Creator', {\n    custom_planned_qty: function(frm) {\n        frm.doc.items.forEach(function(child) {\n            var cdt = child.doctype;\n            var cdn = child.name;\n            update_planned_fabric_needed(frm, cdt, cdn);\n        });\n        frm.refresh_field('items');\n    }\n});\n\nfunction update_planned_fabric_needed(frm, cdt, cdn) {\n    var child_doc = locals[cdt][cdn];\n    if (frm.doc.custom_planned_qty && child_doc.qty) {\n        var custom_planned_fabric_needed = frm.doc.custom_planned_qty * child_doc.qty;\n        frappe.model.set_value(cdt, cdn, 'custom_planned_fabric_needed', custom_planned_fabric_needed);\n    }\n}\n\n// frappe.ui.form.on('BOM Creator Item', {\n//     qty: function(frm, cdt, cdn) {\n//         var child_doc = locals[cdt][cdn];\n        \n//         var custom_planned_fabric_needed = frm.doc.custom_planned_qty * child_doc.qty;\n        \n//         frappe.model.set_value(cdt, cdn, 'custom_planned_fabric_needed', custom_planned_fabric_needed);\n//     }\n// })\n\n",
  "view": "Form"
 }
]